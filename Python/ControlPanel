#!/usr/bin/env python3

""" Used to communicate with the Arduino powered control panel """

import serial
import time
import uinput

bmap =  {
            64 : uinput.BTN_JOYSTICK,
            77 : uinput.BTN_THUMB2
        }

def setup(tty, baud):
    """ Setup the connection with the Arduino """
    connect = lambda args: serial.Serial(args[0], args[1])
    connected = False
    tries = 0
    while not connected and tries < 3:
        try:
            ser = connect((tty, baud))
            connected = True
        except serial.SerialException as _:
            tries += 1
    if not connected:
        print("Unable to connect")
        return


    ser.setDTR(False)
    ser.flushInput()
    ser.setDTR(True)

    ready = False
    while not ready:
        data = ser.readline().decode("ascii")
        print("|"+data+"|")
        if data[0] == "R":
            print("Ready")
            ready = True
    ser.write(b'\x01')

    main(ser)
    close(ser)

def main(ser):
    """ Execute the main logic of the program """
    events = (
             uinput.BTN_JOYSTICK,
             uinput.ABS_X + (0, 1024, 0, 0),
             uinput.ABS_Y + (0, 1024, 0, 0),
             uinput.ABS_Z + (0, 1024, 0, 0),
             uinput.BTN_A,
             uinput.BTN_B,
             uinput.BTN_BASE,
             uinput.BTN_BASE2,
             uinput.BTN_Z,
             uinput.BTN_X,
             uinput.BTN_START,
             uinput.BTN_Y,
             uinput.BTN_THUMB,
             uinput.BTN_THUMB2,
             uinput.BTN_DPAD_LEFT,
             uinput.BTN_DPAD_UP,
             uinput.BTN_DPAD_DOWN,
             uinput.BTN_DPAD_RIGHT
    )
    device = uinput.Device(events)
    x = int(1024/2)
    y = int(1024/2)
    z = int(1024/2)
    button = {}
    run = True
    while run:
        try:
            recv = ser.readline()
            try:
                data = recv.decode("ascii").replace("\n","")
            except:
                print("Error:",recv)
                pass
            action = str(data[0])
            data = str(data[1:])
            if action == 'a': #Analog Input (a)
                pin = data[0]
                value = int(data[1:])
                if pin == 'x':
                    device.emit(uinput.ABS_X, value)
                elif pin == 'y':
                    device.emit(uinput.ABS_Y, value)
                elif pin == 'z':
                    device.emit(uinput.ABS_Z, value)
            elif action == 'b': #Button (b)
                pin = ord(data[0])
                value = int(data[1:])
                if pin not in button:
                    button[pin] = None
                if value != button[pin]:
                    try:
                        device.emit(bmap[pin], value)
                    except:
                        print("No Button:",pin)
                    button[pin] = value
                    print("Button Press:",pin)
            elif action == 'l': #Log (l)
                print("[LOG]",data)

        except KeyboardInterrupt as _:
            run = False
        #except Exception as e:
        #    print("FAILURE")
        #    run = False
        #    print(e)
        #    print(action)
        #    print(data)

def close(ser):
    """ Close the connection with the arduino """
    print("Closing")
    ser.write(b'\x00')
    ser.close()

if __name__ == "__main__":
    setup("/dev/ttyACM3", 57600)
